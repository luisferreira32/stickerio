/*
Stickerio API

MMO RTS Stickerio game on an API.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package generated

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the V1BuildingQueueItem type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &V1BuildingQueueItem{}

// V1BuildingQueueItem struct for V1BuildingQueueItem
type V1BuildingQueueItem struct {
	Id string `json:"id"`
	QueuedEpoch int64 `json:"queuedEpoch"`
	DurationSec int64 `json:"durationSec"`
	Level int64 `json:"level"`
	Building string `json:"building"`
}

type _V1BuildingQueueItem V1BuildingQueueItem

// NewV1BuildingQueueItem instantiates a new V1BuildingQueueItem object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV1BuildingQueueItem(id string, queuedEpoch int64, durationSec int64, level int64, building string) *V1BuildingQueueItem {
	this := V1BuildingQueueItem{}
	this.Id = id
	this.QueuedEpoch = queuedEpoch
	this.DurationSec = durationSec
	this.Level = level
	this.Building = building
	return &this
}

// NewV1BuildingQueueItemWithDefaults instantiates a new V1BuildingQueueItem object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV1BuildingQueueItemWithDefaults() *V1BuildingQueueItem {
	this := V1BuildingQueueItem{}
	return &this
}

// GetId returns the Id field value
func (o *V1BuildingQueueItem) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *V1BuildingQueueItem) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *V1BuildingQueueItem) SetId(v string) {
	o.Id = v
}

// GetQueuedEpoch returns the QueuedEpoch field value
func (o *V1BuildingQueueItem) GetQueuedEpoch() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.QueuedEpoch
}

// GetQueuedEpochOk returns a tuple with the QueuedEpoch field value
// and a boolean to check if the value has been set.
func (o *V1BuildingQueueItem) GetQueuedEpochOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.QueuedEpoch, true
}

// SetQueuedEpoch sets field value
func (o *V1BuildingQueueItem) SetQueuedEpoch(v int64) {
	o.QueuedEpoch = v
}

// GetDurationSec returns the DurationSec field value
func (o *V1BuildingQueueItem) GetDurationSec() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.DurationSec
}

// GetDurationSecOk returns a tuple with the DurationSec field value
// and a boolean to check if the value has been set.
func (o *V1BuildingQueueItem) GetDurationSecOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DurationSec, true
}

// SetDurationSec sets field value
func (o *V1BuildingQueueItem) SetDurationSec(v int64) {
	o.DurationSec = v
}

// GetLevel returns the Level field value
func (o *V1BuildingQueueItem) GetLevel() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.Level
}

// GetLevelOk returns a tuple with the Level field value
// and a boolean to check if the value has been set.
func (o *V1BuildingQueueItem) GetLevelOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Level, true
}

// SetLevel sets field value
func (o *V1BuildingQueueItem) SetLevel(v int64) {
	o.Level = v
}

// GetBuilding returns the Building field value
func (o *V1BuildingQueueItem) GetBuilding() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Building
}

// GetBuildingOk returns a tuple with the Building field value
// and a boolean to check if the value has been set.
func (o *V1BuildingQueueItem) GetBuildingOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Building, true
}

// SetBuilding sets field value
func (o *V1BuildingQueueItem) SetBuilding(v string) {
	o.Building = v
}

func (o V1BuildingQueueItem) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o V1BuildingQueueItem) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	toSerialize["queuedEpoch"] = o.QueuedEpoch
	toSerialize["durationSec"] = o.DurationSec
	toSerialize["level"] = o.Level
	toSerialize["building"] = o.Building
	return toSerialize, nil
}

func (o *V1BuildingQueueItem) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"id",
		"queuedEpoch",
		"durationSec",
		"level",
		"building",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varV1BuildingQueueItem := _V1BuildingQueueItem{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varV1BuildingQueueItem)

	if err != nil {
		return err
	}

	*o = V1BuildingQueueItem(varV1BuildingQueueItem)

	return err
}

type NullableV1BuildingQueueItem struct {
	value *V1BuildingQueueItem
	isSet bool
}

func (v NullableV1BuildingQueueItem) Get() *V1BuildingQueueItem {
	return v.value
}

func (v *NullableV1BuildingQueueItem) Set(val *V1BuildingQueueItem) {
	v.value = val
	v.isSet = true
}

func (v NullableV1BuildingQueueItem) IsSet() bool {
	return v.isSet
}

func (v *NullableV1BuildingQueueItem) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV1BuildingQueueItem(val *V1BuildingQueueItem) *NullableV1BuildingQueueItem {
	return &NullableV1BuildingQueueItem{value: val, isSet: true}
}

func (v NullableV1BuildingQueueItem) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV1BuildingQueueItem) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


